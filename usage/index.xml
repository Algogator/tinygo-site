<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Using TinyGo on TinyGo - Go on Microcontrollers and WASM</title>
    <link>https://tinygo.org/usage/</link>
    <description>Recent content in Using TinyGo on TinyGo - Go on Microcontrollers and WASM</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://tinygo.org/usage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Subcommands</title>
      <link>https://tinygo.org/usage/subcommands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tinygo.org/usage/subcommands/</guid>
      <description>TinyGo tries to be similar to the main go command in usage. It consists of the following main subcommands:
build Compile the given program. The output binary is specified using the -o parameter. The generated file type depends on the extension:
.o Create a relocatable object file. You can use this option if you don&amp;rsquo;t want to use the TinyGo build system or want to do other custom things.</description>
    </item>
    
    <item>
      <title>Important Build Options</title>
      <link>https://tinygo.org/usage/important-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tinygo.org/usage/important-options/</guid>
      <description>There are a few flags to control how binaries are built:
 -o Output filename, see the build command.
 -target Select the target you want to use. Leave it empty to compile for the host. This switch also configures the emulator, flash tool and debugger to use so you don&amp;rsquo;t have to fiddle with those options. Read [supported targets]() for a list of supported targets. Example targets:
 wasm WebAssembly target.</description>
    </item>
    
    <item>
      <title>Misc. Build Options</title>
      <link>https://tinygo.org/usage/misc-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tinygo.org/usage/misc-options/</guid>
      <description>-no-debug Disable outputting debug symbols. This can be useful for WebAssembly, as there is no debugger for .wasm files yet and .wasm files are generally served directly. Avoiding debug symbols can have a big impact on generated binary size, reducing them by more than half. This is not necessary on microcontrollers because debugging symbols are not flashed to the microcontroller. Additionally, you will need it when you use tinygo gdb.</description>
    </item>
    
  </channel>
</rss>